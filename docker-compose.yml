version: "3"

networks:
  pmk_network:
    name: ${NETWORK_NAME}
    driver: bridge

services:
    php:
        image: pmk_php:1.0
        container_name: ${CONTAINER_PREFIX}php
        build:
            context: ${PHP_DOCKERFILE_DIR}
        restart: always
        working_dir: ${PHP_WORKING_DIR}
        volumes:
            - ${PROJECT_ROOT}:${PHP_WORKING_DIR}
            - ${PHP_INI_DIR}/php.ini:/usr/local/etc/php/php.ini
        networks:
            - ${NETWORK_NAME}
        
    mysql:
        image: pmk_mysql:1.0
        container_name: ${CONTAINER_PREFIX}mysql
        build:
            context: ${MYSQL_DOCKERFILE_DIR}
        volumes:
            - ${MYSQL_DB_DIR}:/var/lib/mysql
            - ${MYSQL_DB_DUMP_DIR}/${MYSQL_DB_DUMP_NAME}:/docker-entrypoint-initdb.d/${MYSQL_DB_DUMP_NAME}:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DB_NAME}
        command: --default-authentication-plugin=mysql_native_password && create database testcommand
        networks:
            - ${NETWORK_NAME}

    phpmyadmin:
        image: pmk_phpmyadmin:1.0
        container_name: ${CONTAINER_PREFIX}phpmyadmin
        build: 
            context: ${PHPMYADMIN_DOCKERFILE_DIR}
        volumes:
            - ${PHPMYADMIN_CONF_DIR}/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
        environment:
            PMA_HOST: ${CONTAINER_PREFIX}mysql
        ports:
            - "8080:80"
        networks:
            - ${NETWORK_NAME}

    httpd:
        image: pmk_httpd:1.0
        container_name: ${CONTAINER_PREFIX}httpd
        build:
            context: ${HTTPD_DOCKERFILE_DIR}
        privileged: true
        volumes:
            - ${PROJECT_ROOT}:${HTTPD_WORKING_DIR}
            - ${HTTPD_CONF_DIR}/httpd.conf:/usr/local/apache2/conf/httpd.conf
        ports:
            - "80:80"
        networks:
            - ${NETWORK_NAME}

    elasticsearch:
        image: pmk_elasticsearch:1.0
        container_name: ${CONTAINER_PREFIX}elasticsearch
        build:
            context: ./containers/elasticsearch
        volumes:
            - ${ES_DATA_DIR}:/usr/share/elasticsearch/data
            - ${ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        environment:
            - cluster.name=docker.cluster
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
            - "http.host=0.0.0.0"
            - "transport.host=127.0.0.1"
            - "discovery.zen.ping.unicast.hosts=elasticsearch"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        networks:
            - ${NETWORK_NAME}